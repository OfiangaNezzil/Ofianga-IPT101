/*
Deployment script for GymDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "GymDB"
:setvar DefaultFilePrefix "GymDB"
:setvar DefaultDataPath "C:\Users\nisil\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\nisil\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Starting rebuilding table [dbo].[Members]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Members] (
    [MemberID]       NVARCHAR (10) NOT NULL,
    [FullName]       VARCHAR (100) NOT NULL,
    [Age]            INT           NOT NULL,
    [MembershipType] VARCHAR (50)  NOT NULL,
    [JoinDate]       DATE          NOT NULL,
    PRIMARY KEY CLUSTERED ([MemberID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Members])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Members] ([MemberID], [FullName], [Age], [MembershipType], [JoinDate])
        SELECT   [MemberID],
                 [FullName],
                 [Age],
                 [MembershipType],
                 [JoinDate]
        FROM     [dbo].[Members]
        ORDER BY [MemberID] ASC;
    END

DROP TABLE [dbo].[Members];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Members]', N'Members';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering Procedure [dbo].[AddMember]...';


GO
ALTER PROCEDURE AddMember
    @MemberID NVARCHAR(10) = NULL,
    @FullName VARCHAR(100) = NULL,
    @Age INT  = NULL,
    @MembershipType VARCHAR(50)  = NULL,
    @JoinDate DATE  = NULL
AS
BEGIN
    INSERT INTO Members (MemberID, FullName, Age, MembershipType, JoinDate)
    VALUES (@MemberId, @FullName, @Age, @MembershipType, @JoinDate);
END;
GO
PRINT N'Altering Procedure [dbo].[DeleteMember]...';


GO
ALTER PROCEDURE DeleteMember
    @MemberID NVARCHAR(10)
AS
BEGIN
    DELETE FROM Members WHERE MemberID = @MemberID;
END;
GO
PRINT N'Altering Procedure [dbo].[UpdateMember]...';


GO
ALTER PROCEDURE UpdateMember
    @MemberID NVARCHAR(10),
    @FullName VARCHAR(100),
    @Age INT,
    @MembershipType VARCHAR(50),
    @JoinDate DATE
AS
BEGIN
    UPDATE Members
    SET
        FullName = @FullName,
        Age = @Age,
        MembershipType = @MembershipType,
        JoinDate = @JoinDate
    WHERE MemberID = @MemberID;
END;
GO
PRINT N'Refreshing Procedure [dbo].[GetAllMembers]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[GetAllMembers]';


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
PRINT N'Update complete.';


GO
